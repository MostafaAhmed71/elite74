import React from 'react';
import { Link, useParams } from 'react-router-dom';
import { SectionData } from '../types';
import { ArrowRight, Users, ChevronLeft, ChevronRight } from 'lucide-react';

interface SingleSectionProps {
  sections: SectionData[];
}

const SingleSection: React.FC<SingleSectionProps> = ({ sections }) => {
  const { sectionId } = useParams();
  const section = sections.find(s => s.id === sectionId);
  
  // العثور على القسم السابق والتالي
  const currentIndex = sections.findIndex(s => s.id === sectionId);
  const prevSection = currentIndex > 0 ? sections[currentIndex - 1] : null;
  const nextSection = currentIndex < sections.length - 1 ? sections[currentIndex + 1] : null;

  if (!section) {
    return (
      <div className="min-h-screen flex items-center justify-center p-6" dir="rtl">
        <div className="text-center">
          <h2 className="text-3xl text-white mb-6">القسم غير موجود</h2>
          <Link 
            to="/" 
            className="inline-flex items-center px-6 py-3 bg-white/10 hover:bg-white/20 rounded-lg text-white transition-all duration-300"
          >
            <ArrowRight className="ml-2" />
            العودة للصفحة الرئيسية
          </Link>
        </div>
      </div>
    );
  }

  const filledSeats = section.students.filter(s => s).length;
  const totalSeats = section.students.length;
  const progress = (filledSeats / totalSeats) * 100;

  return (
    <div className="min-h-screen flex items-center" dir="rtl">
      <div className="w-full max-w-6xl mx-auto p-8">
        {/* رأس القسم */}
        <div className="flex items-center justify-between mb-8">
          <Link
            to="/"
            className="text-white/80 hover:text-white flex items-center transition-colors"
          >
            <ArrowRight className="ml-2 w-5 h-5" />
            <span>الرئيسية</span>
          </Link>
          <div className="flex items-center gap-4">
            {prevSection && (
              <Link
                to={`/section/${prevSection.id}`}
                className="text-white/80 hover:text-white flex items-center transition-colors"
              >
                <ChevronRight className="ml-1 w-5 h-5" />
                <span>القسم السابق</span>
              </Link>
            )}
            {nextSection && (
              <Link
                to={`/section/${nextSection.id}`}
                className="text-white/80 hover:text-white flex items-center transition-colors"
              >
                <span>القسم التالي</span>
                <ChevronLeft className="mr-1 w-5 h-5" />
              </Link>
            )}
          </div>
        </div>

        {/* معلومات القسم */}
        <div 
          className="relative rounded-2xl overflow-hidden mb-8 p-8"
          style={{ backgroundColor: section.color }}
        >
          <div className="relative z-10">
            <h1 className="text-4xl font-bold text-white mb-4 drop-shadow-lg">
              {section.title}
            </h1>
            <div className="flex items-center gap-6">
              <div className="flex items-center bg-black/20 rounded-lg px-4 py-2">
                <Users className="w-5 h-5 text-white ml-2" />
                <span className="text-white font-medium">
                  {filledSeats} من {totalSeats} طالب
                </span>
              </div>
              <div className="flex-1 bg-black/20 rounded-lg p-2">
                <div className="h-2 bg-black/20 rounded-full overflow-hidden">
                  <div 
                    className="h-full bg-white transition-all duration-500"
                    style={{ width: `${progress}%` }}
                  />
                </div>
              </div>
            </div>
          </div>
          <div className="absolute inset-0 bg-gradient-to-b from-black/20 to-transparent" />
        </div>

        {/* قائمة الطلاب */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {section.students.map((student, index) => (
            <div
              key={`${section.id}-slot-${index}`}
              className={`p-4 rounded-xl flex items-center ${
                student
                  ? 'bg-white/10 backdrop-blur-sm'
                  : 'bg-white/5 border border-dashed border-white/20'
              }`}
            >
              <div className="w-10 h-10 flex items-center justify-center bg-white/10 rounded-lg ml-4 text-white font-bold">
                {index + 1}
              </div>
              <div className="flex-1">
                {student ? (
                  <div>
                    <div className="text-lg text-white font-medium">
                      {student.name}
                    </div>
                    <div className="text-white/60 text-sm">
                      طالب مسجل
                    </div>
                  </div>
                ) : (
                  <div>
                    <div className="text-lg text-white/60 font-medium">
                      مقعد شاغر
                    </div>
                    <div className="text-white/40 text-sm">
                      متاح للتسجيل
                    </div>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default SingleSection; 